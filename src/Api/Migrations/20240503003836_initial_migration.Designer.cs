// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(DiscoContext))]
    [Migration("20240503003836_initial_migration")]
    partial class initial_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.BarCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("IdDisco")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDisco")
                        .IsUnique();

                    b.ToTable("barcode", (string)null);
                });

            modelBuilder.Entity("Api.Models.Cantor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("cantor", (string)null);
                });

            modelBuilder.Entity("Api.Models.Disco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdLabel")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCatalogo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PrecoLancamento")
                        .HasColumnType("INT");

                    b.Property<int>("TipoMedia")
                        .HasColumnType("INT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("IdLabel");

                    b.ToTable("disco", (string)null);
                });

            modelBuilder.Entity("Api.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("label", (string)null);
                });

            modelBuilder.Entity("Api.Models.Musica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDisco")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("IdDisco");

                    b.ToTable("musica", (string)null);
                });

            modelBuilder.Entity("cantormusica", b =>
                {
                    b.Property<int>("CantoresId")
                        .HasColumnType("int");

                    b.Property<int>("MusicasId")
                        .HasColumnType("int");

                    b.HasKey("CantoresId", "MusicasId");

                    b.HasIndex("MusicasId");

                    b.ToTable("cantormusica");
                });

            modelBuilder.Entity("Api.Models.BarCode", b =>
                {
                    b.HasOne("Api.Models.Disco", "Disco")
                        .WithOne("BarCode")
                        .HasForeignKey("Api.Models.BarCode", "IdDisco")
                        .IsRequired();

                    b.Navigation("Disco");
                });

            modelBuilder.Entity("Api.Models.Disco", b =>
                {
                    b.HasOne("Api.Models.Label", "Label")
                        .WithMany("Discos")
                        .HasForeignKey("IdLabel")
                        .IsRequired();

                    b.Navigation("Label");
                });

            modelBuilder.Entity("Api.Models.Musica", b =>
                {
                    b.HasOne("Api.Models.Disco", "Disco")
                        .WithMany("Musicas")
                        .HasForeignKey("IdDisco")
                        .IsRequired();

                    b.Navigation("Disco");
                });

            modelBuilder.Entity("cantormusica", b =>
                {
                    b.HasOne("Api.Models.Cantor", null)
                        .WithMany()
                        .HasForeignKey("CantoresId")
                        .IsRequired();

                    b.HasOne("Api.Models.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicasId")
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Models.Disco", b =>
                {
                    b.Navigation("BarCode")
                        .IsRequired();

                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("Api.Models.Label", b =>
                {
                    b.Navigation("Discos");
                });
#pragma warning restore 612, 618
        }
    }
}
